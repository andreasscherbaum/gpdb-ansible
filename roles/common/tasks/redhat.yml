---

# for now fail if it's not a Red Hat based system
- name: Check OS (common)
  fail: msg="Not a Red Hat based system!"
  when: ansible_distribution != 'CentOS' and ansible_distribution != 'Red Hat Enterprise Linux'


- name: check if systemd is used (1)
  stat: path=/run/systemd/system
  register: systemd_exists


- name: check if systemd is used (2)
  fail: msg="systemd is not installed"
  when: systemd_exists.stat.exists != True


# update package cache - required for any new software installation
- name: Update yum cache
  yum: name=* state=latest update_cache=yes

## update packages to latest version
#
#- name: upgrade all packages
#  yum: name=* state=latest update_cache=yes
#  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'


- name: Hostname
  hostname: name={{ hostname }}
  notify:
    - restart system
    - waiting for server to come back after restart


- name: /etc/hosts IPv4
  lineinfile: dest=/etc/hosts regexp='^{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }} }}\t' line='{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }} }}\tlocalhost localhost.localdomain localhost4 localhost4.localdomain4 {{ hostname }}' state=present


- name: basic packages
  yum: name={{ item }} state=present
  with_items:
    - vim-enhanced
    - nano
    - screen
    - man-db
    - psmisc
    - bind-utils
    - rsync
    - wget
    - mutt
    - lynx
    - yum-utils
    - unzip
    - pexpect
    - net-tools
    - ed
    - m4


## source: https://github.com/rpm-software-management/yum-utils/blob/master/needs-restarting.py
#- name: install own version of 'needs-restarting'
#  copy: src=needs-restarting.py dest=/root/needs-restarting.py mode=0700
#  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: install Red Hat version of 'needs-restarting'
  get_url:
    url: https://raw.githubusercontent.com/rpm-software-management/yum-utils/master/needs-restarting.py
    dest: /root/needs-restarting.py
    mode: 0700


- name: Reboot required (Red Hat) - Step 1
  command: /root/needs-restarting.py -r
  register: reboot_required
  ignore_errors: True
  changed_when: False

- name: Reboot required (Red Hat) - Step 2
  shell: ( /bin/sleep 5 ; /sbin/shutdown -r now "Ansible updates triggered" ) &
  async: 30
  poll: 0
  ignore_errors: true
  notify:
    - waiting for server to come back after restart
  when: reboot_required.rc == 1


- meta: flush_handlers
