---

# Install Greenplum Command Center v1 on Red Hat / CentOS


- name: Check if the Greenplum Database software is already installed
  stat: path=/usr/local/greenplum-db
  register: gpdb_installed


- name: Stop if database software is not installed
  fail: msg="Greenplum Database software is not installed!"
  when: gpdb_installed.stat.exists != True


- name: Verify that database is up and running
  become_user: gpadmin
  changed_when: False
  shell: ( . /usr/local/greenplum-db/greenplum_path.sh && psql -c "SELECT VERSION()" )
  register: select_version
  failed_when: "'(Greenplum Database ' not in select_version.stdout"


- name: Check if the Command Center version is already installed
  stat: path=/usr/local/greenplum-cc-web-{{ gpcc1_major_version }}.{{ gpcc1_minor_version }}-build-{{ gpcc1_build_version }}
  register: gpcc1_installed


- name: Copy Command Center zip file
  copy: src=greenplum-cc-web-{{ gpcc1_major_version }}.{{ gpcc1_minor_version }}-build-{{ gpcc1_build_version }}-RHEL5-x86_64.zip dest=/home/gpadmin/gpcc1.zip mode=0644 owner=gpadmin group=gpadmin
  when: gpcc1_installed.stat.exists != True


- name: Remove old temp installer directory
  file: path=/home/gpadmin/gpcc1-tmp-install state=absent
  changed_when: False
  when: gpcc1_installed.stat.exists != True


- name: Create new temp installer directory
  file: path=/home/gpadmin/gpcc1-tmp-install state=directory owner=gpadmin group=gpadmin
  changed_when: False
  when: gpcc1_installed.stat.exists != True


- name: Unzip Command Center archive
  unarchive: src=/home/gpadmin/gpcc1.zip dest=/home/gpadmin/gpcc1-tmp-install remote_src=yes copy=no owner=gpadmin group=gpadmin
  when: gpcc1_installed.stat.exists != True


# make next tasks easier by not always using the Ansible variables in the filename
- name: Rename .bin file
  command: creates=/home/gpadmin/gpcc1-tmp-install/gpcc1.bin mv /home/gpadmin/gpcc1-tmp-install/greenplum-cc-web-{{ gpcc1_major_version }}.{{ gpcc1_minor_version }}-build-{{ gpcc1_build_version }}-RHEL5-x86_64.bin /home/gpadmin/gpcc1-tmp-install/gpcc1.bin
  when: gpcc1_installed.stat.exists != True


# This will only work on the first run (secured by gpcc1_installed.stat.exists != True)
# Note: You hereby accept the license! Please see installer for remaining questions.
- name: Accept license and make unattended installation possible
  lineinfile:
    dest: /home/gpadmin/gpcc1-tmp-install/gpcc1.bin
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "{{ item.state }}"
  with_items:
    - { regexp: '^more <<-EOF', line: 'cat << EOF', state: present }
    - { regexp: '^agreed=', line: 'agreed=1', state: present }
    - { regexp: '^installPath=$', line: 'installPath=/usr/local/greenplum-cc-web-{{ gpcc1_major_version }}.{{ gpcc1_minor_version }}-build-{{ gpcc1_build_version }}', state: present }
    - { regexp: '^    agreed=', line: '    agreed=1', state: present }
  when: gpcc1_installed.stat.exists != True


- name: Install Command Center software in /usr/local
  become_user: gpadmin
  shell: ( . /usr/local/greenplum-db/greenplum_path.sh && /home/gpadmin/gpcc1-tmp-install/gpcc1.bin )
  when: gpcc1_installed.stat.exists != True


- name: Remove temp installer directory
  file: path=/home/gpadmin/gpcc1-tmp-install state=absent
  changed_when: False
  when: gpcc1_installed.stat.exists != True


- name: Check again if the Command Center version is already installed
  stat: path=/usr/local/greenplum-cc-web-{{ gpcc1_major_version }}.{{ gpcc1_minor_version }}-build-{{ gpcc1_build_version }}
  register: gpcc1_installed


- name: Stop if Command Center software is not installed
  fail: msg="Command Center software is not installed!"
  when: gpcc1_installed.stat.exists != True


# Status: Command Center software is installed


- name: Set default values for run mode variables
  set_fact:
    gpcc1_gpperfmon_install: False
    gpcc1_setup_cc_sne: False


- name: Verify that gpperfmon is not installed (1)
  become_user: gpadmin
  changed_when: False
  shell: ( . /usr/local/greenplum-db/greenplum_path.sh && psql -c "SELECT COUNT(*) AS count FROM pg_database WHERE datname = 'gpperfmon'" )
  register: select_gpperfmon


- name: Verify that gpperfmon is not installed (1)
  set_fact:
    gpcc1_gpperfmon_install: True
  when: select_gpperfmon.stdout.find('     0') != -1


- name: Install gpperfmon agents
  become_user: gpadmin
  changed_when: False
  shell: ( . /usr/local/greenplum-db/greenplum_path.sh && gpperfmon_install --enable --password 'changeme' --port 5432 )
  when: gpcc1_gpperfmon_install == True


# the gpcc_path.sh from the new installation does not have $GPPERFMONHOME
- name: Add GPPERFMONHOME to gpcc_path.sh
  lineinfile:
    dest: /usr/local/greenplum-cc-web-{{ gpcc1_major_version }}.{{ gpcc1_minor_version }}-build-{{ gpcc1_build_version }}/gpcc_path.sh
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "{{ item.state }}"
  with_items:
    - { regexp: '^export GPPERFMONHOME=', line: 'export GPPERFMONHOME=/usr/local/greenplum-cc-web-{{ gpcc1_major_version }}.{{ gpcc1_minor_version }}-build-{{ gpcc1_build_version }}', state: present }
  when: gpcc1_gpperfmon_install == True


- name: Add login to pg_hba.conf
  lineinfile:
    dest: /data/master/gpsne-1/pg_hba.conf
    line: "{{ item.line }}"
    state: "{{ item.state }}"
  with_items:
    - { line: 'host     all         gpmon         ::1/128    md5', state: present }
  when: gpcc1_gpperfmon_install == True


- name: Copy Command Center setup config file
  copy: src=gpcmdr_setup.ini dest=/home/gpadmin/gpcmdr_setup.ini mode=0644 owner=gpadmin group=gpadmin
  #when: gpcc1_installed.stat.exists != True


- name: Shutdown database
  become_user: gpadmin
  shell: ( . /usr/local/greenplum-db/greenplum_path.sh && gpstop -a )
  when: gpcc1_gpperfmon_install == True
  async: 60
  poll: 5


- name: Start database
  become_user: gpadmin
  shell: ( . /usr/local/greenplum-db/greenplum_path.sh && gpstart -a )
  when: gpcc1_gpperfmon_install == True
  async: 60
  poll: 5


- name: Verify that gpperfmon is installed (1)
  become_user: gpadmin
  changed_when: False
  shell: ( . /usr/local/greenplum-db/greenplum_path.sh && psql -c "SELECT COUNT(*) AS count FROM pg_database WHERE datname = 'gpperfmon'" )
  register: select_gpperfmon


- name: Verify that gpperfmon is not installed (1)
  fail: msg="gpperfmon agents are not installed!"
  when: gpcc1_gpperfmon_install == True and select_gpperfmon.stdout.find('     1') == -1



# no need (for now) to copy the installation with gpccinstall to other hosts
# this is a single node installation


#gpcmdr --setup sne --config_file /home/gpadmin/gpcmdr_setup.ini

#gpcmdr --start sne

#/usr/local/greenplum-cc-web-1.3.0.3-build-18/instances/sne
#/usr/local/greenplum-cc-web/instances/sne/


- name: Verify that Command Center instance is installed (1)
  stat: path=/usr/local/greenplum-cc-web/instances/sne/
  register: gpcc1_sne_configured


- name: Verify that Command Center instance is installed (2)
  set_fact:
    gpcc1_setup_cc_sne: True
  when: gpcc1_sne_configured.stat.exists != True


- name: Setup Command Center instance
  become_user: gpadmin
  changed_when: False
  shell: ( . /usr/local/greenplum-db/greenplum_path.sh && . /usr/local/greenplum-cc-web/gpcc_path.sh && gpcmdr --setup sne --config_file /home/gpadmin/gpcmdr_setup.ini )
  when: gpcc1_setup_cc_sne == True


- name: Start Command Center instance
  become_user: gpadmin
  changed_when: False
  shell: ( . /usr/local/greenplum-db/greenplum_path.sh && . /usr/local/greenplum-cc-web/gpcc_path.sh && gpcmdr --start sne )
  when: gpcc1_setup_cc_sne == True


- name: Command Center instance URL
  debug: msg="http://{{ inventory_hostname }}:28080/"
  when: gpcc1_setup_cc_sne == True









